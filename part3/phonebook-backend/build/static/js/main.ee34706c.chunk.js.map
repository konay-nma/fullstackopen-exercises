{"version":3,"sources":["component/Filter.js","component/Notifications.js","component/PersonForm.js","component/Persons.js","service/service.js","App.js","index.js"],"names":["Filter","handleFilterChange","onChange","Notifications","errorMessage","message","className","error","PersonForm","props","onSubmit","handleSubmit","value","newName","handleNameChange","newNumber","handlePhoneChange","type","Persons","person","onDelete","name","number","onClick","id","baseUrl","newObj","axios","post","then","res","data","get","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","filter","setFilter","setMessage","setErrorMessage","addPerson","service","concat","nullMessage","catch","console","log","response","nullError","updatePerson","alreadyAddedPerson","find","window","confirm","returnPerson","map","err","setTimeout","personsToShow","toLowerCase","includes","useEffect","initialPersons","e","target","preventDefault","alreadyAdd","trim","undefined","key","deletePerson","isDeleted","afterDeleted","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee34706c.chunk.js","sourcesContent":["import React from 'react';\nconst Filter = ({handleFilterChange}) => <div>filter shown with <input onChange={handleFilterChange} /></div>\nexport default Filter","import React from 'react'\nconst Notifications = ({ errorMessage, message }) => {\n    if (errorMessage !== null) {\n        return (\n            <div className=\"error\">{errorMessage.error}</div>\n        )\n    } else if (message !== null) {\n        return (\n            <div className=\"message\">{message}</div>\n        )\n    }\n    return null;\n}\n\nexport default Notifications","import React from 'react';\n\nconst PersonForm = (props) =>\n    <form onSubmit={props.handleSubmit}>\n        <div>\n            name: <input value={props.newName} onChange={props.handleNameChange} /> <br />\n            number: <input value={props.newNumber} onChange={props.handlePhoneChange} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n\nexport default PersonForm","import React from 'react';\nconst Persons = ({ person, onDelete }) => <><div> {person.name} {person.number} <button onClick = {()=> onDelete(person.id)}>delete</button></div></>\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(res => res.data)\n}\n\nconst create = newObj => {\n    const request = axios.post(baseUrl, newObj)\n    return request\n        .then(res => res.data)\n}\n\nconst update = (id, newObj) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObj)\n    return request.then(res => res.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(res => res.data)\n}\n\nexport default {create, getAll, update, deletePerson}","import React, { useEffect, useState } from 'react';\n\nimport Filter from './component/Filter';\nimport Notifications from './component/Notifications';\nimport PersonForm from './component/PersonForm';\nimport Persons from './component/Persons';\n\nimport service from './service/service';\nimport '../src/index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('button clicked', e.target)\n    if (newName === '' || newNumber === '') return\n    const alreadyAdd = persons.find(person => newName.trim() === person.name)\n    console.log(alreadyAdd)\n    alreadyAdd === undefined ?\n      addPerson(newName, newNumber)\n      // setPersons([...persons, { name: newName, number: newNumber }])\n      :\n      // alert(`${newName} is already added to phonebook`)\n      updatePerson(alreadyAdd.id)\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const addPerson = (newName, newNumber) => {\n    const newObj = { name: newName, number: newNumber }\n    service\n      .create(newObj)\n      .then(addPerson => {\n        setPersons(persons.concat(addPerson))\n        setMessage(`${addPerson.name} is successfully added`)\n        nullMessage()\n      })\n      .catch(error => {\n        console.log(error.response.data)\n        setErrorMessage(error.response.data)\n        nullError()\n      })\n  }\n\n  const updatePerson = id => {\n    const alreadyAddedPerson = persons.find(person => person.id === id)\n    const updatePerson = { ...alreadyAddedPerson, number: newNumber }\n    console.log('update', updatePerson)\n    window.confirm(`${alreadyAddedPerson.name} is already added, replace the old number with the new one?`) &&\n      service\n        .update(id, updatePerson)\n        .then(returnPerson => {\n          console.log('return valure', returnPerson)\n          setPersons(persons.map(person => person.id !== id ? person : returnPerson))\n          setMessage(`${returnPerson.name} is successfully updated`)\n          nullMessage()\n        })\n        .catch(err => {\n          console.log(err)\n        })\n  }\n\n  const nullMessage = () => {\n    setTimeout(()=> {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const nullError = () => {\n    setTimeout(()=> {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handlePhoneChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value.toLowerCase())\n  }\n\n  const personsToShow = filter === '' ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter))\n\n  useEffect(() => {\n    service\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const onDelete = id => {\n    const deletePerson = persons.find(person => id === person.id)\n    const isDeleted = window.confirm(`Delted ${deletePerson.name}?`)\n    const afterDeleted = persons.filter(person => id !== person.id)\n    if (!isDeleted) return\n    service\n      .deletePerson(id)\n      .then(res => {\n        setPersons(afterDeleted)\n        setMessage(`${deletePerson.name} is successfully deleted`)\n        nullMessage()\n      })\n      .catch(err => {\n        setErrorMessage(`information of ${deletePerson.name} has been already removed from the server`)\n        setPersons(persons.filter(person => person.id !== id))\n        nullError()\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications errorMessage = {errorMessage} message = {message} />\n      <Filter handleFilterChange={handleFilterChange} />\n      <h3>add new</h3>\n      <PersonForm\n        handleSubmit={handleSubmit}\n        handleNameChange={handleNameChange}\n        handlePhoneChange={handlePhoneChange}\n        newName={newName} newNumber={newNumber} />\n      <h2>Numbers</h2>\n      {\n        personsToShow.map(person => <Persons person={person} key={person.id} onDelete={() => onDelete(person.id)} />)\n      }\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}